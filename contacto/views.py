from django.shortcuts import render# Create your views here.from contacto.forms import ContactFormfrom django.views.generic.edit import FormViewfrom django.core.mail import EmailMessagefrom django.shortcuts import redirectfrom django.template import Contextfrom django.template.loader import get_templateclass ContactView(FormView):    template_name = 'contact.html'    form_class = ContactForm    #success_url = 'gracias/' # Si activo ContactView.as_view()    # Si activo ContactView.contacto() en su lugar de ContactView.as_view()    def contacto(request):        # A este método se le llama cuando llamo a la url 'contacto/'        form_class = ContactForm        if request.method == 'POST':            form = form_class(data=request.POST)            if form.is_valid():                nombre_contacto = request.POST.get(                    'nombre_contacto'                , '')                email_contacto = request.POST.get(                    'email_contacto'                , '')                mensaje = request.POST.get('mensaje', '')                # Email the profile with the                 # contact information                template = get_template('contact.txt')                context = {                    'nombre_contacto': nombre_contacto,                    'email_contacto': email_contacto,                    'mensaje': mensaje,                }                content = template.render(context)                email = EmailMessage(                    "Nuevo envío de mensaje",                    content,                    "http://fpsantacatalina.com",                    ['fpsantacatalina@gmail.com'],                    headers = {'Reply-To': email_contacto }                )                email.send()                return redirect("gracias/")        return render(request, 'contact.html', {            'form': form_class,        })    # Si activo ContactView.as_view()    """def form_valid(self, form):        # A este método se le llama cuando se han enviado datos correctos        # Debería devolver una HttpResponse.        form.send_email()        return super(ContactView, self).form_valid(form)"""    def gracias(request):        # A este método se le llama cuando se devuelve la url de acción correcta        return render(request, 'thanks.html')